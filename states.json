{  "states":[    {      "stateName": "Intro",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [],      "invisibleElements": [        ".hand",        ".hungry",        ".eating",        ".thinking",        ".tableware",        "#table",        ".sim_nav"      ]    },    {      "stateName": "Introduction to simulator",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [1],      "invisibleElements": [        ".eating",        ".hungry",        ".sp",        ".sushi",        "#intro",        "#play"      ]    },    {      "stateName": "Introduction to the problem (explanation)",      "highlighted": true,      "highlightTarget": "#ds1_sp",      "rGetHashi": [],      "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sushi",        "#intro",        "#play"      ],      "englishFrameText": "X",      "portugueseFrameText": "O problema do jantar dos filósofos foi formulado e resolvido por Dijkstra. Neste problema, cinco filósofos estão sentados ao redor de uma mesa circular. Cada filósofo tem um prato de espaguete e precisa de dois garfos para comê-lo. A vida de um filósofo consiste-se em alternados períodos de comer e pensar. Quando um filósofo está com fome ele precisa pegar os dois talheres para comer. A solução precisa ser tal que eles não travem."    },    {      "stateName": "Introduction to the problem",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sushi",        "#intro",        "#play"      ]    },    {      "stateName": "Introduction to the japanese dinner problem (explanation)",      "highlighted": true,      "highlightTarget": "#ds1_sushi",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Como não faz muito sentido precisar de dois garfos para comer um macarrão (talvez este só fosse muito escorregadio). Aqui será tratado o problema do jantar dos filósofos japoneses, porque faz muito mais sentido usar dois hashis para comer um sushi do que dois garfos para comer espaguete."    },    {      "stateName": "Introduction to the japanese dinner problem",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Introduction to process (thinking philosopher)",      "highlighted": true,      "highlightTarget": "#phi1_t",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Este é o filósofo. No mundo computacional, ele representa um processo. No estado em questão, ele está pensando. No mundo real, ele é um processo realizando alguma tarefa onde não é necessário o acesso a um recurso limitado"    },    {      "stateName": "Introduction to process (hungry philosopher)",      "highlighted": true,      "highlightTarget": "#phi1_h",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Neste estado, o filósofo está com fome. No mundo computacional, ele representa um processo que necessita acessar um recurso limitado para realizar a operação da qual tem necessidade (no caso do filósofo, comer)"    },    {      "stateName": "Introduction to process (eating philosopher)",      "highlighted": true,      "highlightTarget": "#phi1_e",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Por último, este é o filósofo comendo. No mundo computacional ele representa um processo que conseguiu acessar os recursos limitados necessários para realizar a operação da qual tinha necessidade e está realizando esta operação"    },    {      "stateName": "Introduction to critical region",      "highlighted": true,      "highlightTarget": "#hs1",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Este é o hashi. Ele representa um recurso limitado. Sempre que um filósofo tenta pegar um dos hashis, ele está entrando em uma região crítica, onde é possível ocorrer um deadlock (travar)"    },    {      "stateName": "Introduction to the wrong solution",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        ".hungry",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "Agora que sabemos o que são cada um dos elementos e o que eles representam, vamos solucionar o problema. É bem simples, só é necessário que cada filósofo pegue o garfo da direita e depois o da esquerda. Vamos fazer isso e ver o que acontece."    },    {      "stateName": "Wrong solution (Philosophers 3 and 5 are hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi1_h", "#phi2_h", "#phi4_h",        "#phi3_t", "#phi5_t",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (Philosophers 3 and 5 are hungry and get right hashi)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi1_h", "#phi2_h", "#phi4_h",        "#phi3_t", "#phi5_t",        "#hs2", "#hs4",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (Philosophers 3 and 5 are eating, 2 becomes hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_e", "#phi2_e", "#phi4_e",        "#phi1_h", "#phi3_h", "#phi4_h", "#phi5_h",        "#phi2_t", "#phi3_t", "#phi5_t",        "#ds1", "#ds2", "ds4",        "#hs2", "#hs3", "#hs4", "#hs5",        ".sp",        "#ds3_sushi", "#ds5_sushi",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (Philosophers 3 and 5 are eating, 2 get the right hashi)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_e", "#phi2_e", "#phi4_e",        "#phi1_h", "#phi3_h", "#phi4_h", "#phi5_h",        "#phi2_t", "#phi3_t", "#phi5_t",        "#ds1", "#ds2", "ds4",        "#hs1", "#hs2", "#hs3", "#hs4", "#hs5",        ".sp",        "#ds3_sushi", "#ds5_sushi",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (2 is hungry with the left hashi)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi1_h", "#phi3_h", "#phi4_h", "#phi5_h",        "#phi2_t",        "#ds1", "#ds2", "ds4",        "#hs1",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (Philosopher 2 eating)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_e", "#phi3_e", "#phi4_e", "#phi5_e",        ".hungry",        "#phi2_t",        "#ds1", "#ds3", "ds4", "ds5",        ".sp",        "#hs1", "#hs2",        "#ds2_sushi",        "#intro",        "#play"      ]    },    {      "stateName": "Everyone okay",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Explanation for when everyone is hungry",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],      "englishFrameText": "This is the explanation",      "portugueseFrameText": "Tudo certo até o momento! E agora, o que acontece quando todos ficam com fome ao mesmo tempo?"    },    {      "stateName": "Wrong solution (Everyone hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Wrong solution (Everyone hungry and without hashi)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        ".hashi",        "#intro",        "#play"      ]    },    {      "stateName": "Introduction to what is a deadlock",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        ".hashi",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation",      "portugueseFrameText": "É... Parece que não deu certo... Cada um dos filósofos tem o hashi a sua direita, porém eles vão esperar para sempre até que o filósofo a sua esquerda libere o outro hashi que precisam para comer. O filósofo a esquerda só o liberaria se conseguisse comer, o que jamais acontecerá porque ele espera o outro, que espera o outro e assim por diante. Isto que aconteceu aqui é o que, computacionalmente, é chamado de deadlock."    },    {      "stateName": "Philosphers die",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        ".hashi",        "#intro",        "#play"      ]    },    {      "stateName": "Philosphers died",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        ".hashi",        "#intro",        "#play"      ],             "englishFrameText": "Explanation",      "portugueseFrameText": "Melhor prestarmos mais atenção para que da próxima vez não matemos nossos filósofos de fome"    },    {      "stateName": "Explanation of the correct answer",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],             "englishFrameText": "This is the explanation!",      "portugueseFrameText": "Esta e a explicacao!"    },    {      "stateName": "Default of no one hungry",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (1 and 4 are hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_t", "#phi4_t",        "#phi2_h", "#phi3_h", "#phi5_h",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (1 and 4 get the right hashi and the left)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_t", "#phi4_t",        ".hungry",        "#phi2_e", "#phi3_e", "#phi5_e",        "#ds2", "#ds3", "#ds5",        "#ds1_sushi", "#ds4_sushi",        "#hs1", "#hs3", "#hs4", "#hs5",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (1 and 4 are eating, 2 and 3 are hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_t",  "#phi2_t",  "#phi3_t", "#phi4_t",        "#phi1_h", "#phi4_h", "#phi5_h",        "#phi2_e", "#phi3_e", "#phi5_e",        "#hs1", "#hs3", "#hs4", "#hs5",        "#ds2", "#ds3", "#ds5",        "#ds1_sushi", "#ds4_sushi",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (1 and 4 are eating, 2 and 3 are hungry and request)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_t",  "#phi2_t",  "#phi3_t", "#phi4_t",        "#phi1_h", "#phi4_h", "#phi5_h",        "#phi2_e", "#phi3_e", "#phi5_e",        "#hs1", "#hs3", "#hs4", "#hs5",        "#ds2", "#ds3", "#ds5",        "#ds1_sushi", "#ds4_sushi",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution: Explanation of the request",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_t",  "#phi2_t",  "#phi3_t", "#phi4_t",        "#phi1_h", "#phi4_h", "#phi5_h",        "#phi2_e", "#phi3_e", "#phi5_e",        "#hs1", "#hs3", "#hs4", "#hs5",        "#ds2", "#ds3", "#ds5",        "#ds1_sushi", "#ds4_sushi",        ".sp",        "#intro",        "#play"      ],      "englishFrameText": "This is the explanation",      "portugueseFrameText": "Esta é a explicacao"    },    {      "stateName": "Right solution (2 and 3 are hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi2_t",  "#phi3_t",        "#phi1_h", "#phi4_h", "#phi5_h",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (2 is eating and 3 is hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_h", "#phi2_h", "#phi4_h", "#phi5_h",        "#phi1_e", "#phi3_e", "#phi4_e", "#phi5_e",        "#phi2_t", "#phi3_t",        "#ds2_sushi",        "#ds1", "#ds3", "#ds4", "#ds5",        "#hs1", "#hs2",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (3 is hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi1_h", "#phi2_h", "#phi4_h", "#phi5_h",        "#phi3_t",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (3 is eating)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        "#phi1_e", "#phi2_e", "#phi4_e", "#phi5_e",        "#phi3_t",        "#ds3_sushi",        "#ds1", "#ds2", "#ds4", "#ds5",        "#hs2", "#hs3",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (Everyone is fine)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution: What happens when everyone is hungry",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],      "englishFrameText": "With this new algoritm, if all the philosophers want to eat at the same time, will a deadlock happen as in the first case?",      "portugueseFrameText": "Com este novo algoritmo, se todos os filósofos ficarem com fome ao mesmo tempo, acontecerá um deadlock como antes?"    },    {      "stateName": "Right solution (everyone is hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (1 and 3 are eating, others send request)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".thinking",        "#phi1_h", "#phi3_h",        "#phi2_e", "#phi4_e", "#phi5_e",        "#ds1_sushi", "#ds3_sushi",        "#ds2", "#ds4", "#ds5",        "#hs1", "#hs2", "#hs3", "#hs5",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (2, 4 and 5 are hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi2_t", "#phi4_t", "#phi5_t",        "#phi1_h", "#phi3_h",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (2 and 4 are eating and 5 send request)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        "#phi1_e", "#phi3_e", "#phi5_e",        "#phi2_t", "#phi4_t", "#phi5_t",        "#phi1_h", "#phi2_h", "#phi3_h", "#phi4_h",        "#hs1", "#hs2", "#hs3", "#hs4",        "#ds2_sushi", "#ds4_sushi",        "#ds1", "#ds3", "#ds5",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (5 is hungry)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".eating",        "#phi5_t",        "#phi1_h", "#phi2_h", "#phi3_h", "#phi4_h",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Right solution (5 is eating)",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        "#phi5_t",        "#phi1_e", "#phi2_e", "#phi3_e", "#phi4_e",        "#ds5_sushi",        "#ds1", "#ds2", "#ds3", "#ds4",        "#hs4", "#hs5",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Default: Everyone is fine",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ]    },    {      "stateName": "Default: Everyone is fine",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],      "englishFrameText": "This is the explanation",      "portugueseFrameText": "Agora o filósofo precisa pegar os dois hashis para continuar e os demais mandam o token. O deadlock não acontece."    },    {      "stateName": "Presenting the idea of looking at the code",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".eating",        ".empty",        ".sp",        "#intro",        "#play"      ],      "englishFrameText": "The C codes of the philosopher's dinner algorithm can be found on the menu section: Codes. For a better understanding of the implementation, please look into this section",      "portugueseFrameText": "Os códigos em C do algoritmo do jantar dos filósofos se encontram na seção do menu: Códigos. Para um melhor entendimento da implementação, procure esta seção."    },    {      "stateName": "Final screen",      "highlighted": true,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".thinking",        ".eating",        ".empty",        ".tableware",        "#table",        "#intro",        "#play"      ],      "englishFrameText": "This is the explanation",      "portugueseFrameText": "Pensar em problemas de sincronização não é tão fácil, mais fácil é comer comida japonesa. =)"    },    {      "stateName": "Final screen",      "highlighted": false,      "highlightTarget": "none",      "rGetHashi": [], "invisibleElements": [        ".hungry",        ".thinking",        ".eating",        ".empty",        ".tableware",        "#table",        "#intro",        "#play"      ]    }  ]}